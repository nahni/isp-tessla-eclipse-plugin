; ModuleID = 'C:\Annika\Studium\3 Semester\SSE Projekt\TeSSLa Plugin\Atom\sub_add_alternation\foo.c'
source_filename = "C:\5CAnnika\5CStudium\5C3 Semester\5CSSE Projekt\5CTeSSLa Plugin\5CAtom\5Csub_add_alternation\5Cfoo.c"
target datalayout = "e-m:w-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc18.0.0"

; Function Attrs: noinline nounwind uwtable
define i32 @add(i32 %x, i32 %y) #0 {
entry:
  %y.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  store i32 %y, i32* %y.addr, align 4
  store i32 %x, i32* %x.addr, align 4
  %0 = load i32, i32* %x.addr, align 4
  %1 = load i32, i32* %y.addr, align 4
  %add = add nsw i32 %0, %1
  ret i32 %add
}

; Function Attrs: noinline nounwind uwtable
define i32 @sub(i32 %x, i32 %y) #0 {
entry:
  %y.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  store i32 %y, i32* %y.addr, align 4
  store i32 %x, i32* %x.addr, align 4
  %0 = load i32, i32* %x.addr, align 4
  %1 = load i32, i32* %y.addr, align 4
  %sub = sub nsw i32 %0, %1
  ret i32 %sub
}

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %sum = alloca i32, align 4
  %i = alloca i32, align 4
  %i4 = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 0, i32* %sum, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4
  %call = call i32 @sub(i32 %1, i32 2)
  %2 = load i32, i32* %sum, align 4
  %call1 = call i32 @add(i32 %2, i32 %call)
  store i32 %call1, i32* %sum, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call2 = call i32 @add(i32 21, i32 21)
  %4 = load i32, i32* %sum, align 4
  %call3 = call i32 @add(i32 %4, i32 %call2)
  store i32 %call3, i32* %sum, align 4
  store i32 0, i32* %i4, align 4
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc10, %for.end
  %5 = load i32, i32* %i4, align 4
  %cmp6 = icmp slt i32 %5, 5
  br i1 %cmp6, label %for.body7, label %for.end12

for.body7:                                        ; preds = %for.cond5
  %6 = load i32, i32* %i4, align 4
  %call8 = call i32 @sub(i32 %6, i32 2)
  %7 = load i32, i32* %sum, align 4
  %call9 = call i32 @add(i32 %7, i32 %call8)
  store i32 %call9, i32* %sum, align 4
  br label %for.inc10

for.inc10:                                        ; preds = %for.body7
  %8 = load i32, i32* %i4, align 4
  %inc11 = add nsw i32 %8, 1
  store i32 %inc11, i32* %i4, align 4
  br label %for.cond5

for.end12:                                        ; preds = %for.cond5
  %9 = load i32, i32* %retval, align 4
  ret i32 %9
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"PIC Level", i32 2}
!1 = !{!"clang version 4.0.0 (tags/RELEASE_400/final)"}
